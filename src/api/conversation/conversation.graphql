scalar JSONObject

type Conversation {
  _id: ID!
  participants: [User!]!
  messages: [Message]!
  author: User!
  plan: Plan
  createdAt: String!
  unreadCount: [UnreadCount]
}

type UnreadCount {
  _id: ID!
  username: String!
  count: Int
}

enum UnreadCountOperations {
  INCREMENT
  DECREMENT
  RESET
}

input CreateConversationInput {
  participants: [String!]!
  message: String
}

input UpdateConversationUnreadCountInput {
  conversationId: ID!
  unreadCountId: ID!
  operation: UnreadCountOperations!
}

extend type Query {
  getConversations: [Conversation]!
  getConversation(conversationId: ID!): Conversation!
}

extend type Mutation {
  createConversation(input: CreateConversationInput!): Conversation!
  deleteConversation(conversationId: ID!): Boolean!
  updateConversationUnreadCount(
    input: UpdateConversationUnreadCountInput!
  ): Conversation!
}

extend type Subscription {
  conversationCreated: Conversation!
}
