enum STATUSES {
  PENDING
  ACCEPTED
  DENIED
}

type Invite {
  _id: ID!
  plan: Plan!
  to: User!
  status: STATUSES
  author: User!
}

input CreateInviteInput {
  plan: ID!
  to: ID!
  status: STATUSES!
}

input UpdateInviteInput {
  inviteId: ID!
  status: STATUSES
}

extend type Query {
  getInvites: [Invite]!
  getInvite(inviteId: ID!): Invite!
}

extend type Mutation {
  createInvite(input: CreateInviteInput!): Invite!
  updateInvite(input: UpdateInviteInput!): Invite!
  deleteInvite(inviteId: ID!): Boolean!
}
