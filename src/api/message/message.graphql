type Message {
  _id: ID!
  conversation: Conversation!
  content: String!
  author: User!
}

input CreateMessageInput {
  conversation: ID!
  content: String!
}

input RemoveMessageInput {
  conversationId: ID!
  messageId: ID!
}

extend type Query {
  getMessages: [Message]!
  getMessage(messageId: ID!): Message!
}

extend type Mutation {
  createMessage(input: CreateMessageInput!): Message!
  deleteMessage(messageId: ID!): Boolean!
  removeMessages(conversationId: ID!): Boolean!
  removeMessage(input: RemoveMessageInput!): Boolean!
}

extend type Subscription {
  messageCreated: Conversation!
  messageUpdated: Conversation!
  messageDeleted: Conversation!
  messagesRemoved: Conversation!
  messageRemoved: Conversation!
}
